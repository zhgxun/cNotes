package github.banana.view;

/**
 * 深拷贝和浅拷贝
 * <p>
 * 浅拷贝
 * 被复制对象的所有变量都含有与原来的对象相同的值, 而所有的对其它对象的引用仍然指向原来的对象
 * 浅拷贝仅仅复制所考虑的对象, 而不复制它所引用的对象
 * <p>
 * 深拷贝
 * 被复制的所有变量都含有与原来的对象相同的值, 而那些引用其它对象的变量将指向被复制过来的新对象, 而不再是原有的那些被引用的对象
 * 深拷贝把要复制的对象所引用的对象都复制了一遍
 * <p>
 * Java数据类型
 *
 * <pre><code>
 * |--------------------------------|
 * | 类型         | 位数     | 字节数 |
 * |--------------------------------|
 * | short        | 2       | 16    |
 * |--------------------------------|
 * | char         | 2       | 16    |
 * |--------------------------------|
 * | int          | 4       | 32    |
 * |--------------------------------|
 * | float        | 4       | 32    |
 * |--------------------------------|
 * | long         | 8       | 64    |
 * |--------------------------------|
 * | double       | 8       | 64    |
 * |--------------------------------|
 * <code/><pre/>
 *
 * {@link System#gc()} 通知 GC 开始工作, 但是什么时候开始进行垃圾回收不确定
 */
public class CopyTest {

    public static void main(String[] args) {
        int i = 0xFFFFFFFF;
        System.out.println(i);
        char c = '\u0571';
        System.out.println(c);
        byte b = 01;
        System.out.println(b);
        int j = 'a';
        System.out.println(j);
        long k = 455555666666L;
        System.out.println(k);
    }
}
