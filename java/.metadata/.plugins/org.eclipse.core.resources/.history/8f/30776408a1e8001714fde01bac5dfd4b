package test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class ListV {

	/**
	 * List有ArrayList和LinkedList两种实现
	 * 
	 * 遍历List使用Iterator或者foreach循环
	 * 
	 * List和Array可以相互转换
	 * 
	 * List是一种有序列表，通过索引访问元素。
	 * 
	 * void add(E e) 在末尾添加一个元素
	 * 
	 * void add(int index, E e) 在指定索引添加一个元素
	 * 
	 * int remove(int index) 删除指定索引的元素
	 * 
	 * int remove(Object e) 删除某个元素
	 * 
	 * E get(int index) 获取指定索引的元素
	 * 
	 * int size() 获取链表大小（包含元素的个数）
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		// List
		System.out.println("List...");
		List<String> strList = new ArrayList<String>();
		strList.add("Apple");
		strList.add("Android");
		strList.add("ZTE");
		for (String s : strList) {
			System.out.println(s);
		}

		// 把List转换为数组
		System.out.println("把List转换为数组...");
		String[] list = strList.toArray(new String[strList.size()]);
		for (String s : list) {
			System.out.println(s);
		}

		// 链表
		System.out.println("链表...");
		List<String> link = new LinkedList<String>();
		link.add("Apple");
		link.add("MeiZu");
		link.add("MI");
		link.add("360");
		for (String s : link) {
			System.out.println(s);
		}

		// 做一个map
		List<Person> p = Arrays.asList(new Person("张三", 19), new Person("李四", 15), new Person("王五", 30));
		// HashMap无序打印, 顺序打印要用TreeMap
		Map<String, Person> map = new TreeMap<>(new Comparator<String>() {

			@Override
			public int compare(String o1, String o2) {
				return 0;
			}
			
		});
		for (Person t : p) {
			map.put(t.getName(), t);
		}
		System.out.println(map.get("张三"));
		System.out.println(map.get("田七"));

		for (String m : map.keySet()) {
			System.out.println(m + " -> " + map.get(m));
		}
	}

}
