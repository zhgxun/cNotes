<?php
1. 建表原则
定长与变长分离
每一单元值占得字符是固定的
核心且常用的字段，直接建成定长放在一张表中

常用字段和不常用字段相互分离

在1对多，需要关联的地方增加冗余字段
空间换时间、时间换空间

2. 列选择原则
字段类型优先级
整形>date_time>enum，char>varchar>text
考虑字符集和校对集（排序规则）

够用就行，不要慷慨

尽量避免使用NULL

Enum类型

3. 索引优化
btree索引
hash索引

索引是一种高效查询的数据结构。索引提高查询，排序，分组速度。

myisam
frm
myd
myi

memory表使用hash索引，查询速度更快，理论复杂度O(1)

hash计算的结果是随机的，地址有冲突，拉链算法，磁盘会有很多空洞，无法对范围查询进行优化
无法利用前缀索引，排序也无法优化

独立的索引，同时只能用一个
实际使用中，更多的是联合索引

多列索引如何发挥作用
a-b-c
where a=3
where a=3 and b=4
where a=3 and b=4 and c=5
必须按顺序使用，否则不能使用索引
左前缀原则

聚族索引和非聚簇索引
myisam 非聚族索引 一次索引和次级索引都指向磁盘上的位置
innodb 聚族索引 树上保存信息，不需要回行，即根据地址在此查找数据，次级索引指向对主键的引用，但是不规则数据会造成页分裂。

索引覆盖
如果索引已经存在，则不需要回行，否则需要回行。

理想的索引
查询频繁，区分度高，长度小，尽量能覆盖常用查询字段

索引长度直接影响索引文件的大小，影响增删改的速度和查询速度，合理使用左前缀

倒叙存取数据，比如网址，因为前面基本相同，com,cn,net,me等
伪哈希技巧
crc32(str)函数，能把字符串转为32位整数，一种哈希算法
然后给这个整形加索引,urlcrc

多列索引的原则
列的查询速率，区分度和顺序
结合具体的业务来查找出最好的索引

重复索引没有任何好处

冗余索引2个索引所覆盖的列有重叠
顺序不一样

碎片
修复表

查询大原则
sql的时间花在哪里
等待，执行时间，其它语句收到干扰，关键在执行上

执行：查找，取出

如何查找快
联合索引，索引覆盖，传输少

切分查询：按数据拆成多次，分解查询

sql语句优化思路
不查-少查-高效的查
必须要查，从索引上查
取时，少取

流水线上的成品率99.9999

explain分析
解释一个语句的执行计划









